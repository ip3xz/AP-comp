#include <lpc214x.h>
#include <stdio.h>
#include <stdlib.h>
#include <float.h>
#include <string.h>
unsigned char msg_1[] = "GSM program started UART initialized\n";
unsigned char AT_cmd[] = "AT\n\r";
unsigned char ATD_string[] = "ATD09172835570;\n\r";
unsigned char ATH_string[] = "ATH0\n\r";
unsigned char cmgf[] = "AT+CMGF=1\n\r";
unsigned char cmgs[] = "AT+CMGS=\"09172835570\"\n\r"; // Include phone number
unsigned char cntl_z = 0x1A; // CTRL+Z for ending SMS
unsigned char text[] = "Welcome to AP LAB";
unsigned char text1[] = "\n\r";
unsigned char text2[] = "Task Completed";
void delay(unsigned int time)
{
unsigned int i,j;
for (i = 0; i < time; i++)
{
for (j = 0; j < 5000; j++);
}
}
// Initialize UART0
void UART0Init(void)
{
PINSEL0 |= 0x00000005; // Configure P0.0 and P0.1 as TXD0 and RXD0
U0LCR = 0x83; // 8 bits, no parity, 1 stop bit, enable DLAB
U0DLL = 0x61; // Baud rate 9600 (assuming 12MHz PCLK)
U0DLM = 0x00; // High byte of baud rate divisor
U0LCR = 0x03; // Disable DLAB
U0FCR = 0x07; // Enable FIFO, clear TX/RX FIFO
}
// Initialize UART1
void UART1Init(void)
{
PINSEL0 |= 0x00050000; // Configure P0.8 and P0.9 as TXD1 and RXD1
U1LCR = 0x83; // 8 bits, no parity, 1 stop bit, enable DLAB
U1DLL = 0x61; // Baud rate 9600 (assuming 12MHz PCLK)
U1DLM = 0x00; // High byte of baud rate divisor
U1LCR = 0x03; // Disable DLAB
U1FCR = 0x07; // Enable FIFO, clear TX/RX FIFO
}
// Send string to UART0
void UART0_Puts(unsigned char *str)
{
while (*str)
{
while (!(U0LSR & 0x20)); // Wait until THR is empty
U0THR = *str++;
}
}
// Send string to UART1
void UART1_Puts(unsigned char *str)
{
while (*str)
{
while (!(U1LSR & 0x20)); // Wait until THR is empty
U1THR = *str++;
}
}
// Send a single character to UART0
void UART0_PutChar(unsigned char c)
{
while (!(U0LSR & 0x20)); // Wait until THR is empty
U0THR = c;
}
// Send a single character to UART1
void UART1_PutChar(unsigned char c)
{
while (!(U1LSR & 0x20)); // Wait until THR is empty
U1THR = c;
}
int main()
{
UART0Init();
UART1Init();
UART0_Puts(msg_1);
UART1_Puts(AT_cmd);
UART0_Puts(AT_cmd);
delay(1000); // Delay in milliseconds
UART1_Puts(ATD_string);
UART0_Puts(ATD_string);
delay(50000); // Delay in milliseconds
UART1_Puts(ATH_string);
UART0_Puts(ATH_string);
delay(3000); // Delay in milliseconds
UART1_Puts(cmgf);
UART0_Puts(cmgf);
delay(3000); // Delay in milliseconds
UART1_Puts(cmgs);
UART0_Puts(cmgs);
delay(10000); // Delay in milliseconds
UART1_Puts(text);
UART0_Puts(text);
delay(3000); // Delay in milliseconds
UART1_PutChar(cntl_z);
UART0_PutChar(cntl_z);
UART1_Puts(text1);
UART0_Puts(text1);
UART1_Puts(text2);
delay(1000); // Delay in milliseconds
while (1);
return 0;
}
